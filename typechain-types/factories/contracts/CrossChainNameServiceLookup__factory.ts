/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  CrossChainNameServiceLookup,
  CrossChainNameServiceLookupInterface,
} from "../../contracts/CrossChainNameServiceLookup";

const _abi = [
  {
    inputs: [],
    name: "AlreadyTaken",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "Registered",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "lookup",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "crossChainNameService",
        type: "address",
      },
    ],
    name: "setCrossChainNameServiceAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50338060008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000087576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200007e90620002a7565b60405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146200010e576200010d816200011760201b60201c565b5b5050506200033b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000188576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200017f9062000319565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600082825260208201905092915050565b7f43616e6e6f7420736574206f776e657220746f207a65726f0000000000000000600082015250565b60006200028f60188362000246565b91506200029c8262000257565b602082019050919050565b60006020820190508181036000830152620002c28162000280565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b60006200030160178362000246565b91506200030e82620002c9565b602082019050919050565b600060208201905081810360008301526200033481620002f2565b9050919050565b610b89806200034b6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80631e59c529146100675780636f2aba191461008357806379ba50971461009f5780638da5cb5b146100a9578063f2fde38b146100c7578063f67187ac146100e3575b600080fd5b610081600480360381019061007c919061087a565b610113565b005b61009d600480360381019061009891906108d6565b61029f565b005b6100a76102eb565b005b6100b1610480565b6040516100be9190610912565b60405180910390f35b6100e160048036038101906100dc91906108d6565b6104a9565b005b6100fd60048036038101906100f8919061092d565b6104bd565b60405161010a9190610912565b60405180910390f35b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461019a576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166002836040516101c291906109e7565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461023e576040517f303973dc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060028360405161024f91906109e7565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6102a7610506565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461037b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037290610a5b565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6104b1610506565b6104ba81610596565b50565b6002818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610594576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058b90610ac7565b60405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610604576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fb90610b33565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610729826106e0565b810181811067ffffffffffffffff82111715610748576107476106f1565b5b80604052505050565b600061075b6106c2565b90506107678282610720565b919050565b600067ffffffffffffffff821115610787576107866106f1565b5b610790826106e0565b9050602081019050919050565b82818337600083830152505050565b60006107bf6107ba8461076c565b610751565b9050828152602081018484840111156107db576107da6106db565b5b6107e684828561079d565b509392505050565b600082601f830112610803576108026106d6565b5b81356108138482602086016107ac565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108478261081c565b9050919050565b6108578161083c565b811461086257600080fd5b50565b6000813590506108748161084e565b92915050565b60008060408385031215610891576108906106cc565b5b600083013567ffffffffffffffff8111156108af576108ae6106d1565b5b6108bb858286016107ee565b92505060206108cc85828601610865565b9150509250929050565b6000602082840312156108ec576108eb6106cc565b5b60006108fa84828501610865565b91505092915050565b61090c8161083c565b82525050565b60006020820190506109276000830184610903565b92915050565b600060208284031215610943576109426106cc565b5b600082013567ffffffffffffffff811115610961576109606106d1565b5b61096d848285016107ee565b91505092915050565b600081519050919050565b600081905092915050565b60005b838110156109aa57808201518184015260208101905061098f565b60008484015250505050565b60006109c182610976565b6109cb8185610981565b93506109db81856020860161098c565b80840191505092915050565b60006109f382846109b6565b915081905092915050565b600082825260208201905092915050565b7f4d7573742062652070726f706f736564206f776e657200000000000000000000600082015250565b6000610a456016836109fe565b9150610a5082610a0f565b602082019050919050565b60006020820190508181036000830152610a7481610a38565b9050919050565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b6000610ab16016836109fe565b9150610abc82610a7b565b602082019050919050565b60006020820190508181036000830152610ae081610aa4565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b6000610b1d6017836109fe565b9150610b2882610ae7565b602082019050919050565b60006020820190508181036000830152610b4c81610b10565b905091905056fea264697066735822122024404106a6443c38316179f39f4a8844ebd649d499c7a864da9f177cc55fb17264736f6c63430008130033";

type CrossChainNameServiceLookupConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CrossChainNameServiceLookupConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CrossChainNameServiceLookup__factory extends ContractFactory {
  constructor(...args: CrossChainNameServiceLookupConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CrossChainNameServiceLookup> {
    return super.deploy(
      overrides || {}
    ) as Promise<CrossChainNameServiceLookup>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CrossChainNameServiceLookup {
    return super.attach(address) as CrossChainNameServiceLookup;
  }
  override connect(signer: Signer): CrossChainNameServiceLookup__factory {
    return super.connect(signer) as CrossChainNameServiceLookup__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrossChainNameServiceLookupInterface {
    return new utils.Interface(_abi) as CrossChainNameServiceLookupInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CrossChainNameServiceLookup {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CrossChainNameServiceLookup;
  }
}
